
=== 엔디언(Endianness) 개념  (Python_Programming.pdf. page49) ==
int.to_bytes(self, /, length=1 (바이트수), byteorder='big', *, signed=False)
  - byteorder  ='big' or 'little'

[ 1024(10진수) ->   0x0400(16진수)  ]
>>> (1024).to_bytes( 2, byteorder = 'big' )  -> 1024정수를  2바이트 길이로 바이트순서를 big으로 리턴
b'\x04\x00'   -> 1024 10진을 16진수

>>> (1024).to_bytes( 2, byteorder = 'little' )
b'\x00\x04'


* 엔디언(Endianness)이란? :  컴퓨터 시스템의 메모리와 같은 데이터 구조 내에서 다중 바이트 데이터의 바이트 순서를
   나타내는 용어로 데이터가 바이트 단위로 나누어서 메모리에 저장될 때, 그 순서가 엔디언에 의해 결정 된다.

* 종류는 ? : 2가지 Big_endian, Little_endian
1) 가장 상위 바이트(Most Significant Byte, MSB)"는 멀티바이트 숫자에서 가장 중요한 바이트를 말한다.

2) MSB 바이트는 그 값이 가장 큰 가중치를 가진다.
 ex) 16진수로 표현된 4바이트(32비트) 숫자 0x12345678에서 MSB -> 0x12

3) 숫자를 다룰 때 비트의 가치는 위치에 따라 결정되며 가장 오른쪽에 있는 비트는 "가장 하위 비트(Least Significant Bit, LSB)"로,
그 값은 2의 0제곱, 즉 1의 가치를 가진다.

4)왼쪽으로 한 칸씩 옮길 때마다 그 비트의 가치는 2의 거듭제곱만큼 증가하며 가장 왼쪽에 있는 비트는 그 숫자에서 가장 큰 가치를 가지고 있으며,
 이를 "가장 상위 비트"라고 부르며 이 비트가 포함된 바이트를 "가장 상위 바이트"라고 말한다.

5)멀티바이트 숫자에서 MSB는 숫자의 크기를 가장 크게 결정한다.
ex)0x12345678에서 0x12를 변경하면 숫자의 전체 크기가 크게 달라지지만, LSB인 0x78을 변경해도 전체 크기는 상대적으로 변함이 적다

6)<<빅 엔디언 방식에서는 이 MSB가 메모리의 가장 낮은 주소에 위치하고, 리틀 엔디언 방식에서는 LSB가 가장 낮은 주소에 위치한다.>>

7)엔디언(Endianness) 은  시스템간 데이터 교환, 파일 포맷, 프로그램 소프트 개발, 하드웨어 설계 및 디버깅 , 다중연산
  다중 바이트 연산, 크로스 -플랫폼 개발에 사용되며 추상화 레이어어 히든 되지만 네트워킹, 시스템 프로그래밍, 임베딩 시스템개발시에
  매우 중요한 개념이다.

============================================================================
제어문
1. 조건문(if = 조건이 참일때  코드 블럭 실행
       / if ~else  = 조건이 참일때 거짓일때 코드실행
       / if-elif-else = 여러 조건을 순차적으로 검사해서 해당 조건이 참이면 코드 블럭을 실행 )
2. 반복 (입력 _while = 조건이 참인 동안 코드블럭을 실행
        / 출력_for = 시퀀스를 순회하면서 코드 블럭을 실행  )
3. return, continue, break

==============================================================================
if문 : 만일에 ~ 하면 ~ 하자

[선언방식]
if <조건식1>:
    <문1>
elif <조건식2>:
    <문2>
else:
    <문3>


case 01: 단일 if  :  만일에 ~ 하면 ~ 하자
if   <조건식1>:  # <조건식1>의 결과가 True일 때
    명령을 수행하자.

case 02 : if ~ else   -> 만일에  ~ 하면 ~ 하고, 그렇지 않으면 else를 수행하자.
 if 조건식True:
         True명령
 else:
         False명령

ex)만일에 입력받은 문자가 소문자이면 '소문자',그렇지 않을 경우 '소문자가 아니야'를 출력하자.
ex)만일에 입력받은 문자가 소문자이면 출력하고 대문자로 변환하고, '소문자 아니야'를 출력하자.
  datetime모듈
  datetime.now() : 정확한 로컬의 날짜 시간 리턴, 타임존정보 O, 시간관련작업
  datetime.today() : 현재 날짜만 리턴, 타임존 정보 X , 단순히 오늘날짜 리턴용
  ex) from datetime import date ;  date.today()
  ex) from datetime import datetime ;  datetime.now()


case 03:  if ~ elif ~ else
 - 하나의 if는 여러개의 조건문인 elif구문을 사용하고 마지막은 else로 구현한다.
 ex)
    if score  >= 90 :
          grad ='A'
    elif  score  >= 80:
         grad ='B'
    elif  score  >= 70:
         grad ='C'
    elif  score  >= 60:
         grad ='D'
    else:
        grad ='F'



========================================================


============================================================================
















