동적 바인딩(Dynamic Binding 또는 Late Binding)
1)동적 바인딩은 실행 시간에 수행되며, 호출될 메서드나 함수를 객체의 실제 타입을 기반으로 결정
2)바인딩된 메서드는 실행 시간에 객체의 실제 타입에 따라 변경될 수 있다
3)Python, C# 등의 동적 타입 언어에서 주로 사용된다.
4)객체의 실제 타입에 따라 [메서드나 함수가 동적]으로 호출된다. ex) class my(base):  def prn();pass
==================================================================
정적 바인딩(Static Binding 또는 Early Binding)
1)정적 바인딩은 컴파일 시간에 수행되며, 호출될 메서드나 함수를 컴파일러가 결정한다.
2) 바인딩된 메서드는 컴파일 시간에 결정되기 때문에 실행 시간에는 변경되지 않는다.
3) C++, Java 등의 정적 타입 언어에서 주로 사용된다.
4) 컴파일러가 타입 정보를 기반으로 어떤 메서드나 함수를 호출할지 결정한다.
=======================================================
f_static.py
@staticmethod :  클래스이름 또는 인스턴스호출/메서드()안에 첫번째 매개인자 X    / 인스턴스변수접근 X / 클래스변수 X /인스턴스생성 X
@classmethod  :  클래스이름 또는 인스턴스호출/메서드(cls)안에 첫번째 매개인자 O / 인스턴스변수접근 o /  클래스변수O /인스턴스생성 o
* @staticmethod 는 독립적인 메서드이고 @classmethod 는 클래스와 관련된 기능 수행
==========================================================================
객체지향 디자인 패턴 관련
1. "Design Patterns: Elements of Reusable Object-Oriented Software" by Erich Gamma, Richard Helm, Ralph Johnson, and John Vlissides (Gang of Four 또는 GoF)

2. "Head First Design Patterns" by Eric Freeman, Elisabeth Robson, Bert Bates, and Kathy Sierra

3."Patterns of Enterprise Application Architecture" by Martin Fowler

4."Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development" by Craig Larman